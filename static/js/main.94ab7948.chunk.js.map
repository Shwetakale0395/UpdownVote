{"version":3,"sources":["Idea.js","Topic.js","reportWebVitals.js","index.js"],"names":["Idea","upVote","props","upVoteCallback","ideadetails","id","votes","downVote","className","this","name","Button","onClick","color","React","Component","Topic","VoteCallback","itemAttributes","index","state","idea","findIndex","x","setState","slice","Object","assign","map","ideadata","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAuBeA,E,4MAjBXC,OAAO,WACN,EAAKC,MAAMC,eAAe,EAAKD,MAAME,YAAYC,GAAG,CAACC,MAAM,EAAKJ,MAAME,YAAYE,MAAM,K,EAEzFC,SAAS,WACT,EAAKL,MAAMC,eAAe,EAAKD,MAAME,YAAYC,GAAG,CAACC,MAAM,EAAKJ,MAAME,YAAYE,MAAM,K,4CAE1F,WACE,OAAO,sBAAKE,UAAU,MAAf,UACH,iCAAOC,KAAKP,MAAME,YAAYC,GAA9B,SACA,qCAAQI,KAAKP,MAAME,YAAYM,QAC/B,cAACC,EAAA,EAAD,CAAQC,QAASH,KAAKR,OAAQY,MAAM,UAApC,iBACA,qCAAQJ,KAAKP,MAAME,YAAYE,SAC/B,cAACK,EAAA,EAAD,CAAQC,QAASH,KAAKF,SAAUM,MAAM,UAAtC,wB,GAdWC,IAAMC,WC2CVC,E,kDA3CX,WAAYd,GAAQ,IAAD,8BACf,cAAMA,IAURe,aAAa,SAACZ,EAAIa,GAChB,IAAIC,EAAQ,EAAKC,MAAMC,KAAKC,WAAU,SAAAC,GAAC,OAAGA,EAAElB,KAAOA,MACpC,IAAXc,GAGF,EAAKK,SAAS,CACZH,KAAK,GAAD,mBACE,EAAKD,MAAMC,KAAKI,MAAM,EAAEN,IAD1B,CAEDO,OAAOC,OAAO,GAAI,EAAKP,MAAMC,KAAKF,GAAQD,IAFzC,YAGE,EAAKE,MAAMC,KAAKI,MAAMN,EAAM,QAlBtC,EAAKC,MAAQ,CAACC,KAAM,IAFL,E,qDAIjB,WAKEZ,KAAKe,SAAS,CAACH,KAJH,CACR,CAAEhB,GAAI,EAAGK,KAAM,eAAeJ,MAAO,GACrC,CAAED,GAAI,EAAGK,KAAM,UAAWJ,MAAO,Q,sBAsBzC,c,oBAIF,WAAU,IAAD,OACP,OAAQ,8BACHG,KAAKW,MAAMC,KAAKO,KAAI,SAACC,EAAUV,GAAX,OACjB,cAAC,EAAD,CAAoBf,YAAayB,EAAU1B,eAAgB,EAAKc,cAAnDE,Y,GArCLL,IAAMC,WCSXe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.94ab7948.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Button } from '@material-ui/core';\r\nimport './App.css';\r\nclass Idea extends React.Component {\r\n\r\n    upVote=()=>{\r\n     this.props.upVoteCallback(this.props.ideadetails.id,{votes:this.props.ideadetails.votes+1});\r\n    }\r\n    downVote=()=>{\r\n    this.props.upVoteCallback(this.props.ideadetails.id,{votes:this.props.ideadetails.votes-1});\r\n    }\r\n  render() {\r\n    return <div className=\"App\">\r\n        <span>{this.props.ideadetails.id}   </span>\r\n        <span> {this.props.ideadetails.name}</span>\r\n        <Button onClick={this.upVote} color=\"primary\"> + </Button>\r\n        <span> {this.props.ideadetails.votes}</span>\r\n        <Button onClick={this.downVote} color=\"primary\"> - </Button>\r\n         </div>;\r\n  }\r\n}\r\n\r\nexport default Idea;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Idea from './Idea'\r\nclass Topic extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {idea: []};\r\n      }\r\n      componentDidMount(){\r\n       const data = [       \r\n            { id: 1, name: \"ModernOffice\",votes: 2 },\r\n            { id: 2, name: \"Offsite\" ,votes: 0},          \r\n          ];\r\n        this.setState({idea: data});\r\n      }  \r\n      VoteCallback=(id, itemAttributes)=> {\r\n        var index = this.state.idea.findIndex(x=> x.id === id);\r\n        if (index === -1)\r\n       {}\r\n        else{\r\n          this.setState({\r\n            idea: [\r\n               ...this.state.idea.slice(0,index),\r\n               Object.assign({}, this.state.idea[index], itemAttributes),\r\n               ...this.state.idea.slice(index+1)\r\n            ]\r\n          });\r\n        }\r\n      } \r\n    // VoteCallback=(idea)=>{\r\n        \r\n    //      this.setState({idea:{...this.state.idea,vote:idea.votes+1}});\r\n    // }\r\n    downVote(){\r\n\r\n    } \r\n\r\n  render() {\r\n    return (<div>\r\n        {this.state.idea.map((ideadata, index) => (\r\n            <Idea  key ={index} ideadetails={ideadata} upVoteCallback={this.VoteCallback}/>\r\n            \r\n        ))}\r\n        </div>);\r\n  }\r\n}\r\n\r\nexport default Topic;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Topic from './Topic';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode> \n    <Topic />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}